# comment - nested
type Comment {
  title: String
  content: String
}

# activity - main
type Activity {
  id: ID!
  userId: String!
  name: String!
  description: String
  content: String
  status: ActivityStatus
  date: String
  comments: [Comment]
}

type ActivityConnection {
  items: [Activity]
  nextToken: String
}

## address - nested
type Address {
  address1: String!
  address2: String
  city: String!
  state: String!
  zipCode: String!
  country: String
}

# profileEvent - nested
type ProfileEvent {
  title: String!
  content: String
  area: String
  startDate: String
  endDate: String
}

# profile - nested
type Profile {
  currentRole: String!
  summary: String
  experience: [ProfileEvent]
  education: [ProfileEvent]
  licenses: [String]
  certifications: [String]
  recommendations: [String]
  skills: [String]
  endorsements: [String]
}

# job - main
type Job {
  id: ID!
  userId: String!
  title: String!
  category: String!
  type: String!
  description: String
  isFullyRemote: String
  howtoApply: String
  companyDescription: String
  companyHQ: String
  companyName: String
  companyStatement: String
  companyWebsiteURL: String
  logo: String
  startDate: String
  endDate: String
  applicants: [String] # userId array
}

type JobConnection {
  items: [Job]
  nextToken: String
}

# main - list of subscriptions
type SubscriptionType {
  id: ID!
  name: String
  description: String
  frequency: SubscriptionFrequency
  price: Float # maybe enum with sets prices
}

type SubscriptionTypeConnection {
  items: [SubscriptionType]
  nextToken: String
}

# billing - nested
type Billing {
  subscriptionId: String!
  firstname: String!
  lastname: String!
  middlename: String
  address: Address!
  paymentmethod: String!
  creditcard: String!
  details: String
}

# subscription - nested
type Subscription {
  subscriptionsId: String!
  userId: String!
  billing: Billing
  active: Boolean
}

# user - main
type User {
  id: ID!
  cognitoid: ID!
  address: Address!
  email: String
  username: String!
  firstName: String
  lastName: String
  phone: String
  registered: Boolean
  subcribed: Boolean
  profile: Profile
  activities: [Activity] # changes to activity are updates here
  applications: [String] # jobId array
  subscription: Subscription # only job creators have this
}

type UserConnection {
  items: [User]
  nextToken: String
}

# Enumeration
enum ActivityStatus {
  open
  closed
}

enum SubscriptionFrequency {
  weekly
  monthly
  quarterly
  yearly
}
